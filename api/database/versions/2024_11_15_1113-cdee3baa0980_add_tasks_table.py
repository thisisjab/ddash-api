"""add_tasks_table

Revision ID: cdee3baa0980
Revises: 95671e68225d
Create Date: 2024-11-15 11:13:48.562764+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cdee3baa0980"
down_revision: Union[str, None] = "95671e68225d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tasks",
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("finish_date", sa.Date(), nullable=True),
        sa.Column("deadline", sa.Date(), nullable=True),
        sa.Column(
            "state",
            sa.Enum(
                "BACKLOG",
                "BLOCKED",
                "CANCELLED",
                "CODE_REVIEW",
                "COMPLETED",
                "IN_PROGRESS",
                "QA",
                "QA_REJECTED",
                "REVIEWED",
                "TODO",
                name="taskstate",
            ),
            nullable=False,
        ),
        sa.Column("priority", sa.SmallInteger(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "state = 'COMPLETED' AND finish_date IS NOT NULL OR state != 'COMPLETED' AND finish_date IS NULL",
            name=op.f("ck_tasks_finish_date_present_if_done"),
        ),
        sa.CheckConstraint(
            "finish_date >= start_date", name=op.f("ck_tasks_finish_date_gt_start_date")
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name=op.f("fk_tasks_project_id_projects"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tasks")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tasks")
    # ### end Alembic commands ###
